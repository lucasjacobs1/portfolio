image: mcr.microsoft.com/dotnet/sdk:8.0

community-api-build:
  stage: build
  script:
    - echo "Build Community Api"
    - 'cd festivalconnect-services/Community.API/Community.API'
    - 'dotnet build'
  rules:
    - changes:
      - "festivalconnect-services/Community.API/**/*" #Only execute when there are changes in community api directory

community-api-audit:
  stage: audit
  script:
    - echo "Audit NuGet packages for Community API"
    - cd festivalconnect-services/Community.API/Community.API
    - dotnet restore # Restore dependencies
    - dotnet list package --vulnerable # Check for vulnerable packages
    - dotnet list package --outdated # Check for outdated packages
  allow_failure: true
  rules:
    - changes:
        - "festivalconnect-services/Community.API/**/*" # Only execute when there are changes in community api directory

community-api-tests:
  stage: test
  script:
    - echo "Run Tests of community Api"
    - 'cd festivalconnect-services/Community.API/CommunityApiTests'
    - 'dotnet test'
  rules:
    - changes:
      - "festivalconnect-services/Community.API/**/*" #Only execute when there are changes in community api directory


sonarqube-check-community:
  stage: analyze
  image: mcr.microsoft.com/dotnet/core/sdk:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd festivalconnect-services/Community.API
    - dotnet tool list -g
    - dotnet sonarscanner begin /k:"FestivalConnect-Community.API" /d:sonar.login="$SONAR_TOKEN_COMMUNITY_API" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
    - dotnet build
    - dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
    - dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN_COMMUNITY_API"
    - dotnet build-server shutdown
  allow_failure: true
  rules:
    - changes:
      - "festivalconnect-services/Community.API/**/*"  # Only execute when there are changes in community API directory

community-docker-build:
  stage: publish
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
  script:
    - echo "Deployment for community service"
    - |
      if (docker images -q communityapi) {
        docker rmi communityapi
      }
    - docker build /Users/2003l/Videos/S6-Individual-FestivalConnect/s6-individual-festivalconnect/festivalconnect-services/Community.API/. -t communityapi
    - docker tag communityapi lucasjacobs/communityapi
    - docker push lucasjacobs/communityapi
  rules:
    - if: '$CI_COMMIT_BRANCH == "development" || $CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - "festivalconnect-services/Community.API/**/*"

