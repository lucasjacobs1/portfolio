plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.4.0.2513"
    id 'jacoco'

}

group 'org.example'
version '1.0-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'junit:junit:4.13.1'
    implementation 'junit:junit:4.13.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.flywaydb:flyway-core:9.4.0'
    implementation 'org.flywaydb:flyway-mysql:9.4.0'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

sonarqube{
    properties{
        property "sonar.projectKey", "S3-IndividualProject"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_d7135bd2551b4c9745852d167d1d9c3986a1ad4d"

    }
}

tasks.named("sonarqube").configure{
    dependsOn jacocoTestReport //always generates jacoco report before sonarqube
}

jacocoTestReport{
    dependsOn test
    reports{
        xml.required = true
        csv.required = false;
        html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
    }
}